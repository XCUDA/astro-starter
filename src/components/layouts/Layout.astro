---
// Layout.astro - Production-Ready Layout with Advanced SEO System
// Path: src/components/layouts/Layout.astro

import Header from './Header.astro';
import Footer from './Footer.astro';
import Sidebar from './Sidebar.astro';
import Breadcrumbs from './Breadcrumbs.astro'; 
import { Toaster } from '@/components/ui/sonner';
import { prepareSeoForLayout, type SeoData, type SeoConfig } from '@/lib/seo';
import type { CollectionEntry } from 'astro:content';

export interface Props {
  title: string;
  description?: string;
  keywords?: string[];
  author?: string;
  image?: string;
  
  // Advanced SEO Configuration
  contentEntry?: CollectionEntry<'services'> | CollectionEntry<'pages'> | CollectionEntry<'testimonials'>;
  customSeo?: Partial<SeoData>;
  seoConfig?: SeoConfig;
  
  // Layout configuration
  headerVariant?: 'default' | 'minimal' | 'business' | 'landing';
  footerVariant?: 'minimal' | 'business' | 'comprehensive' | 'startup';
  showNavigation?: boolean;
  showDarkModeToggle?: boolean;
  showCTA?: boolean;
  ctaText?: string;
  ctaHref?: string;
  showBreadcrumbs?: boolean;
  
  // Business props (for Footer)
  showBusinessInfo?: boolean;
  showNewsletter?: boolean;
  companyName?: string;
  siteDescription?: string;
  showSocials?: boolean;
  
  // Sidebar configuration
  showSidebar?: boolean;
  sidebarVariant?: 'admin' | 'dashboard' | 'compact' | 'minimal';
  sidebarCollapsible?: boolean;
  
  // Enhanced sticky behavior (Sprint 9)
  stickyBehavior?: 'always-visible' | 'hide-on-scroll' | 'auto-hide' | 'scroll-up-show' | 'static';
  hideOnScroll?: boolean;
  scrollThreshold?: number;
  hideDelay?: number;
  showScrollIndicator?: boolean;
  
  // Legacy SEO (deprecated - use customSeo instead)
  canonicalURL?: string;
  noindex?: boolean;
  
  // Page-specific settings
  currentPage?: string;
}

// Destructure props avec defaults
const {
  title,
  description = "A modern, production-ready Astro 5 starter with TailwindCSS 4, shadcn/ui, and TypeScript. Perfect for professional websites.",
  keywords = ["astro", "tailwindcss", "shadcn-ui", "typescript", "starter", "modern", "professional"],
  author = "XCUDA - Professional Web Development",
  image = "/og-image.jpg",
  
  // Advanced SEO
  contentEntry,
  customSeo,
  seoConfig,
  
  // Layout defaults optimized for business sites
  headerVariant = 'default',
  footerVariant = 'business',
  showNavigation = true,
  showDarkModeToggle = true,
  showCTA = false,
  ctaText = "Get Started",
  ctaHref = "/contact",
  showBreadcrumbs = true,
  
  // Business features
  showBusinessInfo = false,
  showNewsletter = false,
  companyName = "Your Company",
  siteDescription = "Professional business description", 
  showSocials = true,

  // Sidebar defaults (false by default, opt-in)
  showSidebar = false,
  sidebarVariant = 'admin',
  sidebarCollapsible = true,
  
  // Sticky behavior defaults (modern always-visible)
  stickyBehavior = 'always-visible',
  hideOnScroll = false,
  scrollThreshold = 100,
  hideDelay = 2000,
  showScrollIndicator = false,
  
  // Legacy SEO (backward compatibility)
  canonicalURL,
  noindex = false,
  
  // Page identification
  currentPage
} = Astro.props;

// Default SEO configuration for therapist business
const defaultSeoConfig: SeoConfig = {
  businessName: companyName || "Cabinet Wellness",
  location: "Lausanne",
  defaultTemplate: "therapist",
  defaultKeywords: ["bien-être", "thérapie", "santé", "relaxation", "Lausanne"],
  social: {
    facebook: "https://facebook.com/cabinet-wellness",
    instagram: "https://instagram.com/cabinet.wellness"
  },
  analytics: {
    plausible: "cabinet-wellness.ch"
  }
};

// Generate advanced SEO data
const seo = prepareSeoForLayout(
  {
    title,
    description,
    keywords,
    customSeo: {
      ...customSeo,
      // Backward compatibility
      canonical: customSeo?.canonical || canonicalURL,
      noindex: customSeo?.noindex || noindex
    }
  },
  contentEntry,
  seoConfig || defaultSeoConfig
);

// Generate canonical URL
const finalCanonicalURL = seo.canonical || new URL(Astro.url.pathname, Astro.site).toString();

// Generate absolute URL for Open Graph
const absoluteImageUrl = seo.ogImage?.startsWith('http') 
  ? seo.ogImage 
  : new URL(seo.ogImage || image, Astro.site).toString();
---

<!doctype html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={seo.description} />
    <meta name="keywords" content={seo.keywords.join(', ')} />
    <meta name="author" content={seo.author || author} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    
    <!-- Canonical URL for SEO -->
    <link rel="canonical" href={finalCanonicalURL} />
    
    <!-- Robots meta -->
    {seo.noindex && <meta name="robots" content="noindex, nofollow" />}
    
    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={seo.ogType || "website"} />
    <meta property="og:url" content={finalCanonicalURL} />
    <meta property="og:title" content={seo.ogTitle || seo.title} />
    <meta property="og:description" content={seo.ogDescription || seo.description} />
    <meta property="og:image" content={absoluteImageUrl} />
    
    <!-- Twitter -->
    <meta property="twitter:card" content={seo.twitterCard || "summary_large_image"} />
    <meta property="twitter:url" content={finalCanonicalURL} />
    <meta property="twitter:title" content={seo.ogTitle || seo.title} />
    <meta property="twitter:description" content={seo.ogDescription || seo.description} />
    <meta property="twitter:image" content={absoluteImageUrl} />
    
    <!-- Structured Data (JSON-LD) -->
    {seo.structuredData && (
      <script type="application/ld+json" set:html={JSON.stringify(seo.structuredData)} />
    )}
    
    <!-- Page title -->
    <title>{seo.title}</title>
    
    <!-- Analytics -->
    {seoConfig?.analytics?.plausible && (
      <script defer data-domain={seoConfig.analytics.plausible} src="https://plausible.io/js/script.js"></script>
    )}
    {seoConfig?.analytics?.ga4 && (
      <>
        <script async src={`https://www.googletagmanager.com/gtag/js?id=${seoConfig.analytics.ga4}`}></script>
        <script is:inline define:vars={{ga4: seoConfig.analytics.ga4}}>
          window.dataLayer = window.dataLayer || [];
          function gtag(){dataLayer.push(arguments);}
          gtag('js', new Date());
          gtag('config', ga4);
        </script>
      </>
    )}
    
    <!-- ASTRO 5 OFFICIAL SOLUTION: Inline theme script to prevent FOUC -->
    <script is:inline>
      (function() {
        const getThemePreference = () => {
          if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
            return localStorage.getItem('theme');
          }
          return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
        };
        
        const theme = getThemePreference();
        const root = document.documentElement;
        
        root.classList.remove('dark', 'light');
        
        if (theme === 'dark') {
          root.classList.add('dark');
        } else {
          root.classList.add('light');
        }
        
        window.__THEME__ = theme;
        
        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
          if (!localStorage.getItem('theme')) {
            const newTheme = e.matches ? 'dark' : 'light';
            root.classList.remove('dark', 'light');
            root.classList.add(newTheme);
            window.__THEME__ = newTheme;
          }
        });
      })();
    </script>
    
    <!-- Global CSS with TailwindCSS 4 + shadcn/ui (MUST be is:global) -->
    <style is:global>
      @import "../../styles/global.css";
    </style>
  </head>

  <body class="min-h-screen bg-background text-foreground antialiased">
    
    <!-- Sonner Toaster for notifications with proper semantic colors -->
    <Toaster 
      client:load 
      position="bottom-right"
      theme="system"
      richColors={true}
      closeButton={true}
      toastOptions={{
        duration: 4000,
        classNames: {
          toast: "group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg",
          description: "group-[.toast]:text-muted-foreground",
          actionButton: "group-[.toast]:bg-primary group-[.toast]:text-primary-foreground",
          cancelButton: "group-[.toast]:bg-muted group-[.toast]:text-muted-foreground",
          closeButton: "group-[.toast]:bg-background group-[.toast]:text-muted-foreground group-[.toast]:border-border hover:group-[.toast]:bg-muted",
        }
      }}
    />
    
    <!-- SKIP LINKS - WCAG 2.1 AA Navigation Aid -->
    <div class="sr-only focus:not-sr-only fixed top-0 left-0 z-50">
      <a 
        href="#main-content" 
        class="inline-block m-2 px-4 py-2 bg-primary text-primary-foreground rounded-md focus:outline-none focus:ring-2 focus:ring-primary-foreground shadow-xl"
      >
        Skip to main content
      </a>
      {showNavigation && (
        <a 
          href="#main-navigation" 
          class="inline-block m-2 px-4 py-2 bg-primary text-primary-foreground rounded-md focus:outline-none focus:ring-2 focus:ring-primary-foreground shadow-xl"
        >
          Skip to navigation
        </a>
      )}
      <a 
        href="#footer-content" 
        class="inline-block m-2 px-4 py-2 bg-primary text-primary-foreground rounded-md focus:outline-none focus:ring-2 focus:ring-primary-foreground shadow-xl"
      >
        Skip to footer
      </a>
    </div>

    <!-- SEMANTIC LAYOUT STRUCTURE -->
    {showSidebar ? (
      <!-- Sidebar Layout -->
      <div class="flex h-screen overflow-hidden">
        
        <!-- Sidebar Navigation -->
        <aside role="navigation" aria-label="Sidebar navigation">
          <Sidebar 
            variant={sidebarVariant}
            collapsed={!sidebarCollapsible}
            currentPage={currentPage}
          />
        </aside>
        
        <!-- Main Content Area -->
        <div class="flex-1 flex flex-col overflow-hidden">
          
          <!-- Header sans wrapper - StickyHeader gère tout -->
          <Header 
            variant={headerVariant}
            showNavigation={false}
            showDarkModeToggle={showDarkModeToggle}
            showCTA={showCTA}
            ctaText={ctaText}
            ctaHref={ctaHref}
            currentPage={currentPage}
            stickyBehavior="always-visible"
          />
          
          <!-- Main Content -->
          <main id="main-content" role="main" class="flex-1 overflow-y-auto" tabindex="-1">
            <div class="p-6">
              <slot />
            </div>
          </main>
        </div>
      </div>
    ) : (
      <!-- Standard Layout -->
      <div class="flex flex-col min-h-screen">
        
        <!-- Header direct - Sans wrapper -->
        <Header 
          variant={headerVariant}
          showNavigation={showNavigation}
          showDarkModeToggle={showDarkModeToggle}
          showCTA={showCTA}
          ctaText={ctaText}
          ctaHref={ctaHref}
          currentPage={currentPage}
          stickyBehavior={stickyBehavior}
          hideOnScroll={hideOnScroll}
          scrollThreshold={scrollThreshold}
          hideDelay={hideDelay}
          showScrollIndicator={showScrollIndicator}
        />

        <!-- Breadcrumbs Navigation -->
        {showBreadcrumbs && (
          <Breadcrumbs 
            variant="business"
            showHome={true}
            showIcons={true}
            currentPageTitle={seo.title}
          />
        )}
        
        <!-- Main Content -->
        <main id="main-content" role="main" class="flex-1" tabindex="-1">
          <slot />
        </main>
        
        <!-- Page Footer -->
        <footer id="footer-content" role="contentinfo">
          <Footer 
            variant={footerVariant}
            showBusinessInfo={showBusinessInfo}
            showNewsletter={showNewsletter}
            companyName={companyName}
            siteDescription={siteDescription}
            showSocials={showSocials}
          />
        </footer>
      </div>
    )}
    
    <!-- Astro 5 ViewTransitions enhancements -->
    <script>
      import type { TransitionBeforeSwapEvent } from 'astro:transitions/client';
      
      // Preserve theme state during ViewTransitions
      document.addEventListener('astro:before-swap', (e) => {
        const theme = window.__THEME__ || document.documentElement.classList.contains('dark') ? 'dark' : 'light';
        (e as TransitionBeforeSwapEvent).newDocument.documentElement.classList.toggle('dark', theme === 'dark');
      });
      
      // Re-initialize components after page transition
      document.addEventListener('astro:page-load', () => {
        window.dispatchEvent(new CustomEvent('theme:restored'));
      });

      // Focus management for skip links
      document.addEventListener('DOMContentLoaded', () => {
        const skipLinks = document.querySelectorAll('a[href^="#"]');
        skipLinks.forEach(link => {
          link.addEventListener('click', (e) => {
            const targetId = link.getAttribute('href')?.substring(1);
            if (targetId) {
              const target = document.getElementById(targetId);
              if (target) {
                target.focus();
                target.scrollIntoView({ behavior: 'smooth', block: 'start' });
              }
            }
          });
        });
      });
    </script>
  </body>
</html>

<style>
  /* Optimize critical rendering path */
  html {
    color-scheme: light dark;
  }
  
  /* Smooth theme transitions */
  * {
    transition: background-color 0.2s ease, border-color 0.2s ease, color 0.2s ease;
  }
  
  /* Optimize scroll behavior */
  html {
    scroll-behavior: smooth;
  }
  
  /* Prevent flash during transitions */
  .dark {
    color-scheme: dark;
  }
  
  /* ViewTransitions optimizations */
  @view-transition {
    navigation: auto;
  }
  
  /* Skip links styling for accessibility */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }
  
  .focus\:not-sr-only:focus,
  .focus\:not-sr-only:focus-within {
    position: static;
    width: auto;
    height: auto;
    padding: 0;
    margin: 0;
    overflow: visible;
    clip: auto;
    white-space: normal;
  }
  
  /* Ensure main content is focusable */
  main:focus {
    outline: none;
  }
  
  /* Reduce motion for accessibility */
  @media (prefers-reduced-motion: reduce) {
    * {
      transition: none !important;
      animation: none !important;
    }
    
    html {
      scroll-behavior: auto;
    }
  }

  /* Ensure Toaster is always visible */
  [data-sonner-toaster] {
    z-index: 99999 !important;
  }
  
  /* Semantic background colors for toast types */
  [data-sonner-toast][data-type="success"] {
    background: rgb(34 197 94) !important; /* green-500 */
    color: white !important;
    border: 1px solid rgb(21 128 61) !important; /* green-700 */
  }
  
  [data-sonner-toast][data-type="error"] {
    background: rgb(239 68 68) !important; /* red-500 */
    color: white !important;
    border: 1px solid rgb(185 28 28) !important; /* red-700 */
  }
  
  [data-sonner-toast][data-type="warning"] {
    background: rgb(245 158 11) !important; /* amber-500 */
    color: white !important;
    border: 1px solid rgb(180 83 9) !important; /* amber-700 */
  }
  
  [data-sonner-toast][data-type="info"] {
    background: rgb(59 130 246) !important; /* blue-500 */
    color: white !important;
    border: 1px solid rgb(29 78 216) !important; /* blue-700 */
  }
  
  /* Better close button styling */
  [data-sonner-toast] button[data-close-button] {
    position: absolute !important;
    top: 8px !important;
    right: 8px !important;
    background: rgba(255, 255, 255, 0.2) !important;
    color: white !important;
    border: 1px solid rgba(255, 255, 255, 0.3) !important;
    border-radius: 4px !important;
    width: 20px !important;
    height: 20px !important;
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    font-size: 12px !important;
    line-height: 1 !important;
    opacity: 0.8 !important;
    transition: all 0.2s ease !important;
  }
  
  [data-sonner-toast] button[data-close-button]:hover {
    background: rgba(255, 255, 255, 0.3) !important;
    opacity: 1 !important;
    transform: scale(1.1) !important;
  }
  
  /* Ensure text remains readable on colored backgrounds */
  [data-sonner-toast][data-type="success"] [data-description],
  [data-sonner-toast][data-type="error"] [data-description],
  [data-sonner-toast][data-type="warning"] [data-description],
  [data-sonner-toast][data-type="info"] [data-description] {
    color: rgba(255, 255, 255, 0.9) !important;
  }
</style>